{"version":3,"sources":["components/08-useReducer/todoReducer.js","components/08-useReducer/TodoListItem.js","components/08-useReducer/TodoList.js","components/08-useReducer/TodoAdd.js","hooks/useForm.js","components/08-useReducer/TodoApp.js","index.js"],"names":["todoReducer","state","action","type","payload","filter","todo","id","map","done","TodoListItem","index","handleDelete","handleToggle","key","className","onClick","desc","TodoList","todos","i","TodoAdd","handleAddTodo","initialState","useState","values","setvalues","reset","handleInputChange","target","name","value","useForm","description","onSubmit","e","preventDefault","trim","length","newTodo","Date","getTime","placeholder","autoComplete","onChange","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","todoId","newtodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27f278cd.chunk.js","sourcesContent":["export const todoReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'add':\r\n            return [...state, action.payload];\r\n\r\n        case 'delete':\r\n            return state.filter(todo => todo.id !== action.payload);\r\n\r\n        case 'toggle':\r\n            return state.map(todo =>\r\n                (todo.id===action.payload)\r\n                    ? {...todo, done: !todo.done}\r\n                    : todo\r\n            );\r\n\r\n        // case 'toggle-old':\r\n        //     return state.map(todo => {\r\n        //         if(todo.id===action.payload){\r\n        //             return {\r\n        //                 ...todo,\r\n        //                 done: !todo.done\r\n        //             }\r\n        //         }else{\r\n        //             return todo;\r\n        //         }\r\n        //     })\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\n\r\nexport const TodoListItem = ({todo, index, handleDelete, handleToggle}) => {\r\n    return (\r\n        <li\r\n                key={todo.id}\r\n                className=\"list-group-item\"\r\n        > \r\n            <p \r\n                className={`${todo.done && 'complete'}`}\r\n                onClick={()=>handleToggle(todo.id)}\r\n            > \r\n                {index+1}. {todo.desc} \r\n            </p>\r\n            <button \r\n                className=\"btn btn-danger\"\r\n                onClick={() => handleDelete(todo.id)}\r\n            >\r\n                Borrar\r\n            </button>\r\n        </li>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { TodoListItem } from './TodoListItem';\r\n\r\nexport const TodoList = ({todos, handleDelete, handleToggle}) => {\r\n    return (\r\n        <ul className=\"list-group list-group-flush\">\r\n            {\r\n                todos.map((todo, i) => (\r\n                    <TodoListItem \r\n                        key={todo.id}\r\n                        todo={todo}\r\n                        index={i}\r\n                        handleDelete={handleDelete}\r\n                        handleToggle={handleToggle}\r\n                    />\r\n                ))\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const TodoAdd = ({handleAddTodo}) => {\r\n\r\n    const [{description}, handleInputChange, reset] = useForm({\r\n        description: ''\r\n    });\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(description.trim().length<=1){\r\n            return;\r\n        }\r\n\r\n        const newTodo = {\r\n            id: new Date().getTime(),\r\n            desc: description,\r\n            done: false\r\n        };\r\n\r\n        handleAddTodo(newTodo);\r\n        reset();\r\n    }\r\n\r\n    return (\r\n        <>\r\n           <h4>Agregar Tarea</h4>\r\n            <hr/>\r\n            <form onSubmit={handleSubmit}>\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"description\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Aprender...\"\r\n                    autoComplete=\"off\"\r\n                    value={description}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary mt-1 btn-block\"\r\n                >\r\n                    Agregar\r\n                </button>\r\n            </form> \r\n        </>\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n   \r\n    const [values, setvalues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setvalues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({target}) => { // desestructuramos el evento (e) para no poner \"e.algo\"\r\n        \r\n        setvalues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n\r\n}\r\n","import React, { useReducer, useEffect } from 'react';\r\nimport './styles.css';\r\nimport { todoReducer } from './todoReducer';\r\nimport { TodoList } from './TodoList';\r\nimport { TodoAdd } from './TodoAdd';\r\n\r\n\r\nconst init = () => {\r\n    return JSON.parse(localStorage.getItem('todos')) || [];\r\n};\r\n\r\nexport const TodoApp = () => {\r\n\r\n    const [todos, dispatch] = useReducer(todoReducer, [], init);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('todos', JSON.stringify(todos));\r\n    }, [todos]);\r\n\r\n    const handleDelete = (todoId) => {\r\n   \r\n        const action = {\r\n            type: 'delete',\r\n            payload: todoId\r\n        };\r\n\r\n        dispatch(action);\r\n    }\r\n\r\n    const handleToggle = (todoId) => {\r\n        dispatch({\r\n            type: 'toggle',\r\n            payload: todoId\r\n        });\r\n    }\r\n\r\n    const handleAddTodo = (newtodo) =>{\r\n   \r\n        dispatch({\r\n            type: 'add',\r\n            payload: newtodo\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>TareasApp - MGQ</h1>\r\n            <br/>\r\n            <h3>Listado de Tareas ({todos.length})</h3>\r\n            <hr/>\r\n            <div className=\"row\">\r\n                <div className=\"col-7\">\r\n                    <TodoList \r\n                        todos={todos}\r\n                        handleDelete={handleDelete}\r\n                        handleToggle={handleToggle}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-5\">\r\n                    <TodoAdd \r\n                        handleAddTodo={handleAddTodo}\r\n                    />\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import { HookApp } from './HookApp';\n//import { CounterApp } from './components/01-useState/CounterApp';\n//import { CounterWithCustomHook } from './components/01-useState/CounterWithCustomHook';\n//import { SimpleForm } from './components/02-useEffect/SimpleForm';\n//import { FormWithCustomHook } from './components/02-useEffect/FormWithCustomHook';\n//import { MultipleCustomHooks } from './components/03-examples/MultipleCustomHooks';\n//import { FocusScreen } from './components/04-useRef/FocusScreen';\n//import { RealExampleRef } from './components/04-useRef/RealExampleRef';\n//import { Layout } from './components/05-useLayoutEffect/Layout';\n//import { Memorize } from './components/06-memos/Memorize';\n//import { MemoHook } from './components/06-memos/MemoHook';\n//import { CallbackHook } from './components/06-memos/CallbackHook';\n//import { Padre } from './components/07-tarea-memo/Padre';\nimport {TodoApp} from './components/08-useReducer/TodoApp';\n\nReactDOM.render(\n    <TodoApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}